{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd year\\\\2nd Semister\\\\E-commerce\\\\project\\\\poultry-farm\\\\src\\\\context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst ShopContextProvider = props => {\n  _s();\n  const [allProducts, setAllProducts] = useState([]);\n  const [cartItems, setCartItems] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login status\n\n  // Fetch products and cart items\n  useEffect(() => {\n    const fetchProductsAndCart = async () => {\n      try {\n        // Fetch products\n        const productsResponse = await fetch(\"http://localhost/poultry/fetchProducts.php\");\n        if (!productsResponse.ok) {\n          throw new Error(`Failed to fetch products: ${productsResponse.status}`);\n        }\n        const productsData = await productsResponse.json();\n        console.log(\"All Products:\", productsData);\n        setAllProducts(productsData);\n\n        // Initialize cart items\n        const initialCart = {};\n        productsData.forEach(product => {\n          initialCart[product.id] = 0;\n        });\n        setCartItems(initialCart);\n\n        // Fetch cart items if the user is logged in\n        if (isLoggedIn) {\n          const cartResponse = await fetch(\"http://localhost/poultry/getCart.php\", {\n            credentials: \"include\" // Include cookies for session handling\n          });\n          if (!cartResponse.ok) {\n            throw new Error(`Failed to fetch cart: ${cartResponse.status}`);\n          }\n          const cartData = await cartResponse.json();\n          console.log(\"Cart data:\", cartData);\n\n          // Update cart items with quantities from the backend\n          const updatedCart = {\n            ...initialCart\n          };\n          cartData.forEach(item => {\n            updatedCart[item.product_id] = item.quantity;\n          });\n          setCartItems(updatedCart);\n          console.log(\"Updated Cart Items:\", updatedCart);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchProductsAndCart();\n  }, [isLoggedIn]); // Refetch cart items when login status changes\n\n  const addToCart = async itemId => {\n    try {\n      const response = await fetch(\"http://localhost/poultry/addToCart.php\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          product_id: itemId,\n          quantity: 1\n        })\n      });\n      const result = await response.json();\n      console.log(result);\n      if (result.result === \"Item added to cart\") {\n        setCartItems(prev => ({\n          ...prev,\n          [itemId]: prev[itemId] + 1\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error adding to cart:\", error);\n    }\n  };\n  const removeFromCart = async itemId => {\n    try {\n      const response = await fetch(\"http://localhost/poultry/removeFromCart.php\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          product_id: itemId\n        })\n      });\n      const result = await response.json();\n      console.log(result);\n      if (result.result === \"Item updated in cart\") {\n        setCartItems(prev => ({\n          ...prev,\n          [itemId]: prev[itemId] - 1\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error removing from cart:\", error);\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        const itemInfo = allProducts.find(product => product.id === parseInt(item));\n        if (itemInfo) {\n          totalAmount += itemInfo.new_price * cartItems[item];\n        }\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItem = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const handleLogin = () => {\n    setIsLoggedIn(true); // Set login status to true after successful login\n  };\n  const contextValue = {\n    getTotalCartItem,\n    getTotalCartAmount,\n    allProducts,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    handleLogin // Expose login handler\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 10\n  }, this);\n};\n_s(ShopContextProvider, \"5qS+agjRvc0/hIG6LW83O0hKehA=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","allProducts","setAllProducts","cartItems","setCartItems","isLoggedIn","setIsLoggedIn","fetchProductsAndCart","productsResponse","fetch","ok","Error","status","productsData","json","console","log","initialCart","forEach","product","id","cartResponse","credentials","cartData","updatedCart","item","product_id","quantity","error","addToCart","itemId","response","method","headers","body","JSON","stringify","result","prev","removeFromCart","getTotalCartAmount","totalAmount","itemInfo","find","parseInt","new_price","getTotalCartItem","totalItem","handleLogin","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/3rd year/2nd Semister/E-commerce/project/poultry-farm/src/context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  const [cartItems, setCartItems] = useState({});\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login status\r\n\r\n  // Fetch products and cart items\r\n  useEffect(() => {\r\n    const fetchProductsAndCart = async () => {\r\n      try {\r\n        // Fetch products\r\n        const productsResponse = await fetch(\"http://localhost/poultry/fetchProducts.php\");\r\n        if (!productsResponse.ok) {\r\n          throw new Error(`Failed to fetch products: ${productsResponse.status}`);\r\n        }\r\n        const productsData = await productsResponse.json();\r\n        console.log(\"All Products:\", productsData);\r\n        setAllProducts(productsData);\r\n\r\n        // Initialize cart items\r\n        const initialCart = {};\r\n        productsData.forEach((product) => {\r\n          initialCart[product.id] = 0;\r\n        });\r\n        setCartItems(initialCart);\r\n\r\n        // Fetch cart items if the user is logged in\r\n        if (isLoggedIn) {\r\n          const cartResponse = await fetch(\"http://localhost/poultry/getCart.php\", {\r\n            credentials: \"include\", // Include cookies for session handling\r\n          });\r\n          if (!cartResponse.ok) {\r\n            throw new Error(`Failed to fetch cart: ${cartResponse.status}`);\r\n          }\r\n          const cartData = await cartResponse.json();\r\n          console.log(\"Cart data:\", cartData);\r\n\r\n          // Update cart items with quantities from the backend\r\n          const updatedCart = { ...initialCart };\r\n          cartData.forEach((item) => {\r\n            updatedCart[item.product_id] = item.quantity;\r\n          });\r\n          setCartItems(updatedCart);\r\n\r\n          console.log(\"Updated Cart Items:\", updatedCart);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProductsAndCart();\r\n  }, [isLoggedIn]); // Refetch cart items when login status changes\r\n\r\n  const addToCart = async (itemId) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost/poultry/addToCart.php\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ product_id: itemId, quantity: 1 }),\r\n      });\r\n      const result = await response.json();\r\n      console.log(result);\r\n      if (result.result === \"Item added to cart\") {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding to cart:\", error);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (itemId) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost/poultry/removeFromCart.php\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ product_id: itemId }),\r\n      });\r\n      const result = await response.json();\r\n      console.log(result);\r\n      if (result.result === \"Item updated in cart\") {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error removing from cart:\", error);\r\n    }\r\n  };\r\n\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        const itemInfo = allProducts.find((product) => product.id === parseInt(item));\r\n        if (itemInfo) {\r\n          totalAmount += itemInfo.new_price * cartItems[item];\r\n        }\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const getTotalCartItem = () => {\r\n    let totalItem = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        totalItem += cartItems[item];\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    setIsLoggedIn(true); // Set login status to true after successful login\r\n  };\r\n\r\n  const contextValue = {\r\n    getTotalCartItem,\r\n    getTotalCartAmount,\r\n    allProducts,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    handleLogin, // Expose login handler\r\n  };\r\n\r\n  return <ShopContext.Provider value={contextValue}>{props.children}</ShopContext.Provider>;\r\n};\r\n\r\nexport default ShopContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}